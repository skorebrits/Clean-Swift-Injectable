//
//  CleanViewControllerPresenterTests.swift
//  CleanTest
//
//  Created by Sander Korebrits on 03/06/2019.
//  Copyright (c) 2019 Sander Korebrits. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import CleanInjectable
import XCTest

class CleanViewControllerPresenterTests: XCTestCase{
    
    // MARK: Subject under test
    var sut: CleanPresenter!

    // MARK: Test lifecycle
    override func setUp(){
        super.setUp()
        setupCleanViewControllerPresenter()
    }

    override func tearDown(){
        super.tearDown()
    }

    // MARK: Test setup
    func setupCleanViewControllerPresenter(){
        sut = CleanPresenter()
    }

    // MARK: Test doubles
    class CleanViewControllerDisplayLogicSpy: CleanDisplayLogic {
        
        var displayCalled = false

        func display(viewModel: Clean.ListItem.ViewModel) {
            displayCalled = true
        }
    }

    // MARK: Tests
    func testPresentSomething(){
        
        // Given
        let spy = CleanViewControllerDisplayLogicSpy()
        sut.viewController = spy
        let response = Clean.ListItem.Response(title: "ViewController Clean")

        // When
        sut.presentListItem(response: response)

        // Then
        XCTAssertTrue(spy.displayCalled, "presentSomething(response:) should ask the view controller to display the result")
    }
}
